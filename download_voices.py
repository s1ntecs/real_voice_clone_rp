#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π RVC
–∏–∑ —Å–ª–æ–≤–∞—Ä—è VOICES –≤ src/voices.py
"""

import os
import sys
import zipfile
import requests
import shutil
from pathlib import Path
from urllib.parse import urlparse

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å VOICES –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
from voices import VOICES

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
RVC_MODELS_DIR = Path(__file__).parent / 'rvc_models'
TEMP_DIR = Path(__file__).parent / 'temp_downloads'
CHUNK_SIZE = 8192  # –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (8KB)


def download_file(url, destination):
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª —Å progress bar
    
    Args:
        url: URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        destination: –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    """
    print(f"  üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ: {url}")
    
    try:
        response = requests.get(url, stream=True, timeout=30)
        response.raise_for_status()
        
        total_size = int(response.headers.get('content-length', 0))
        downloaded = 0
        
        with open(destination, 'wb') as f:
            for chunk in response.iter_content(chunk_size=CHUNK_SIZE):
                if chunk:
                    f.write(chunk)
                    downloaded += len(chunk)
                    
                    if total_size > 0:
                        progress = (downloaded / total_size) * 100
                        print(f"\r  ‚è≥ –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress:.1f}% ({downloaded}/{total_size} bytes)", end='')
        
        print()  # –ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        return True
        
    except Exception as e:
        print(f"\n  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")
        return False


def extract_zip(zip_path, extract_to):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ zip –∞—Ä—Ö–∏–≤–∞
    
    Args:
        zip_path: –ü—É—Ç—å –∫ zip —Ñ–∞–π–ª—É
        extract_to: –ö—É–¥–∞ –∏–∑–≤–ª–µ—á—å
    """
    print(f"  üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞...")
    
    try:
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            zip_ref.extractall(extract_to)
        return True
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ: {e}")
        return False


def find_model_files(directory):
    """
    –ò—â–µ—Ç —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–µ–π (.pth –∏ .index) –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
    
    Args:
        directory: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞
        
    Returns:
        –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏ –º–æ–¥–µ–ª–∏ –∏–ª–∏ None
    """
    directory = Path(directory)
    
    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ —Å–∞–º–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    pth_files = list(directory.glob('*.pth'))
    if pth_files:
        return directory
    
    # –ò—â–µ–º –≤ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö (–ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å)
    for subdir in directory.iterdir():
        if subdir.is_dir():
            pth_files = list(subdir.glob('*.pth'))
            if pth_files:
                return subdir
    
    return None


def process_voice_model(voice_name, url):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–Ω—É –≥–æ–ª–æ—Å–æ–≤—É—é –º–æ–¥–µ–ª—å: —Å–∫–∞—á–∏–≤–∞–µ—Ç, —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç, –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç
    
    Args:
        voice_name: –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ (–∫–ª—é—á –∏–∑ —Å–ª–æ–≤–∞—Ä—è VOICES)
        url: URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        
    Returns:
        True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    """
    print(f"\n{'='*60}")
    print(f"üé§ –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥–µ–ª–∏: {voice_name}")
    print(f"{'='*60}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–æ–¥–µ–ª—å
    target_dir = RVC_MODELS_DIR / voice_name
    if target_dir.exists():
        print(f"  ‚úÖ –ú–æ–¥–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {target_dir}")
        print(f"  ‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...")
        return True
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    TEMP_DIR.mkdir(exist_ok=True)
    temp_model_dir = TEMP_DIR / voice_name
    temp_model_dir.mkdir(exist_ok=True)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    zip_filename = f"{voice_name}.zip"
    zip_path = temp_model_dir / zip_filename
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        if not download_file(url, zip_path):
            return False
        
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤
        extract_dir = temp_model_dir / 'extracted'
        extract_dir.mkdir(exist_ok=True)
        
        if not extract_zip(zip_path, extract_dir):
            return False
        
        # –ù–∞—Ö–æ–¥–∏–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å —Ñ–∞–π–ª–∞–º–∏ –º–æ–¥–µ–ª–∏
        model_files_dir = find_model_files(extract_dir)
        
        if not model_files_dir:
            print(f"  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–∏ (.pth) –≤ –∞—Ä—Ö–∏–≤–µ")
            return False
        
        print(f"  üìÅ –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–∏ –≤: {model_files_dir.relative_to(temp_model_dir)}")
        
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–∏ –≤ —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        print(f"  üìÇ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤: {target_dir}")
        shutil.move(str(model_files_dir), str(target_dir))
        
        print(f"  ‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        files = list(target_dir.glob('*'))
        print(f"  üìÑ –§–∞–π–ª—ã –º–æ–¥–µ–ª–∏:")
        for file in files:
            print(f"     - {file.name}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        try:
            if temp_model_dir.exists():
                shutil.rmtree(temp_model_dir)
        except Exception as e:
            print(f"  ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: {e}")


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - —Å–∫–∞—á–∏–≤–∞–µ—Ç –≤—Å–µ –º–æ–¥–µ–ª–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è VOICES
    """
    print("\n" + "="*60)
    print("üéµ –ó–ê–ì–†–£–ó–ö–ê –ì–û–õ–û–°–û–í–´–• –ú–û–î–ï–õ–ï–ô RVC")
    print("="*60)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –º–æ–¥–µ–ª–µ–π –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    RVC_MODELS_DIR.mkdir(exist_ok=True)
    
    print(f"\nüìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–¥–µ–ª–µ–π: {RVC_MODELS_DIR}")
    print(f"üìä –í—Å–µ–≥–æ –º–æ–¥–µ–ª–µ–π –≤ —Å–ª–æ–≤–∞—Ä–µ: {len(VOICES)}")
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ –º–æ–¥–µ–ª–µ–π —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    existing_models = [name for name in VOICES.keys() 
                      if (RVC_MODELS_DIR / name).exists()]
    
    print(f"‚úÖ –£–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {len(existing_models)}")
    print(f"üì• –ù—É–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å: {len(VOICES) - len(existing_models)}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    success_count = 0
    failed_count = 0
    skipped_count = 0
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –º–æ–¥–µ–ª—å
    for i, (voice_name, url) in enumerate(VOICES.items(), 1):
        print(f"\n[{i}/{len(VOICES)}]")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–µ–ª–∏ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
        if (RVC_MODELS_DIR / voice_name).exists():
            skipped_count += 1
            print(f"‚è≠Ô∏è  {voice_name}: –£–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            continue
        
        result = process_voice_model(voice_name, url)
        
        if result:
            success_count += 1
        else:
            failed_count += 1
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "="*60)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("="*60)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ: {success_count}")
    print(f"‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –±—ã–ª–∏): {skipped_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {failed_count}")
    print(f"üìä –í—Å–µ–≥–æ –º–æ–¥–µ–ª–µ–π: {len(VOICES)}")
    print("="*60)
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if TEMP_DIR.exists():
        try:
            shutil.rmtree(TEMP_DIR)
            print("\nüßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã")
        except Exception as e:
            print(f"\n‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {e}")
    
    print("\n‚ú® –ì–æ—Ç–æ–≤–æ!\n")


if __name__ == "__main__":
    main()